// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourManagement.Data;

#nullable disable

namespace TourManagement.Migrations
{
    [DbContext(typeof(TourContext))]
    [Migration("20250923075448_Update2309v1")]
    partial class Update2309v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TourManagement.Model.Itinerary", b =>
                {
                    b.Property<Guid>("ItineraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ItineraryDetails")
                        .HasColumnType("longtext");

                    b.Property<int?>("ItineraryOrder")
                        .HasColumnType("int");

                    b.Property<string>("ItineraryTitles")
                        .HasColumnType("longtext");

                    b.Property<Guid>("TourID")
                        .HasColumnType("char(36)");

                    b.HasKey("ItineraryId");

                    b.HasIndex("TourID");

                    b.ToTable("Itineraries");
                });

            modelBuilder.Entity("TourManagement.Model.Tour", b =>
                {
                    b.Property<Guid>("TourID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AgencyID")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CancelPolicies")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DurationDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Excluded")
                        .HasColumnType("longtext");

                    b.Property<string>("Included")
                        .HasColumnType("longtext");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Policies")
                        .HasColumnType("longtext");

                    b.Property<string>("Requiments")
                        .HasColumnType("longtext");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("StartingPoint")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TourGuideId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Transportation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TourID");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("TourManagement.Model.TourGuide", b =>
                {
                    b.Property<Guid>("TourGuideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AgencyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TourGuideIdNumber")
                        .HasColumnType("int");

                    b.Property<string>("TourGuideName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TourGuideId");

                    b.ToTable("TourGuides");
                });

            modelBuilder.Entity("TourManagement.Model.TourMember", b =>
                {
                    b.Property<Guid>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TourId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TourMemberIdNumber")
                        .HasColumnType("int");

                    b.Property<string>("TourMemberName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MemberId");

                    b.ToTable("TourMembers");
                });

            modelBuilder.Entity("TourManagement.Model.Itinerary", b =>
                {
                    b.HasOne("TourManagement.Model.Tour", "Tour")
                        .WithMany("Itineraries")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("TourManagement.Model.Tour", b =>
                {
                    b.Navigation("Itineraries");
                });
#pragma warning restore 612, 618
        }
    }
}
